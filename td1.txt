
Struct Data {
    double angle
    u_int_8 sens
}


returnAngle giroutte et codeur incremental (void) (return double angle) 
    ajusterPlateau : sens,PWM, moteur ,sens (int -100<x<100), vitesse ( int 0<x<100 )
    returnAllure : largue, vent debout, arriere (double angle) (return string)
ajusterVoile : IMU partie gyro et accelerometre , servo moteur (void)
    recupInfo (void) (return Struct AllData) 
    if (!testData) {
        Ajuster : ouvrirVoile, fermerVoile,  
                  ajusterPlateau sens (u_int_8 -100<x<100), vitesse ( int 0<x<100 )
    }
    
 
 
recupInfo
    returnAngle;
    return 

recupInfosNonVitales (void) (return Struct DataNonVitale) Pas souvent ex. toutes le minutes
    returnHeure : RTC, I2C
    mesureBatterie : ADC
    printAllure (double angle) (return string)
    
commXbee


pour la girouette mettre en quadrature sur Timx_Ch1-2 ou ch 3-4 en input a la fin on doit avoir le nombre de fronts montants/descendants dans CNT 
attention degré demi-degré ou quart 


En priorité : 
-Orientation du voilier/cap
	rapport cyclique de pwm pour la vitesse 
-Mesure Orientation du vent 
	avec la girouette : A,B,Index 
	2 Timx_Ch1-2 input avec le CNT
-Bordage des voiles
	PWM servomoteur 20ms de période et rapport cyclique de 5-10% 
-Réception télécommande 
	Xbee <-> Uart <-> STM32 tous les 100ms 0 à 100 gauche ou droite vitesse

Ensuite : 
-Mesure du niveau de batteries 	
	ADC 
-Transmissions informations (batterie + bordage)
	UART
-Système anti-chavirement
	I2C
-Horodateur
	RTC avec I2C



	